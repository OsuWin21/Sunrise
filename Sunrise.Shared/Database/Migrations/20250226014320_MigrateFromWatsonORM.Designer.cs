// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sunrise.Shared.Database;

#nullable disable

namespace Sunrise.Shared.Database.Migrations
{
    [DbContext(typeof(SunriseDbContext))]
    [Migration("20250226014320_MigrateFromWatsonORM")]
    partial class MigrateFromWatsonORM
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Sunrise.Shared.Database.Models.BeatmapFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeatmapId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeatmapSetId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2147483647)")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.ToTable("beatmap_file", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Events.EventUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64)")
                        .UseCollation("NOCASE");

                    b.Property<string>("JsonData")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2147483647)")
                        .UseCollation("NOCASE");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("event_user", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Medal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)")
                        .UseCollation("NOCASE");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)")
                        .UseCollation("NOCASE");

                    b.Property<int?>("FileId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileUrl")
                        .HasColumnType("VARCHAR(1024)")
                        .UseCollation("NOCASE");

                    b.Property<int?>("GameMode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.ToTable("medal", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.MedalFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("MedalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.ToTable("medal_file", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Migration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AppliedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.ToTable("migration", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Restriction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExecutorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2147483647)")
                        .UseCollation("NOCASE");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("restriction", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Accuracy")
                        .HasColumnType("DECIMAL(100, 2)");

                    b.Property<string>("BeatmapHash")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64)")
                        .UseCollation("NOCASE");

                    b.Property<int>("BeatmapId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeatmapStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ClientTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Count100")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count300")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count50")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountGeki")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountKatu")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountMiss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameMode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64)")
                        .UseCollation("NOCASE");

                    b.Property<byte>("IsPassed")
                        .HasColumnType("TINYINT");

                    b.Property<byte>("IsScoreable")
                        .HasColumnType("TINYINT");

                    b.Property<int>("MaxCombo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mods")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OsuVersion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64)")
                        .UseCollation("NOCASE");

                    b.Property<byte>("Perfect")
                        .HasColumnType("TINYINT");

                    b.Property<decimal>("PerformancePoints")
                        .HasColumnType("DECIMAL(100, 2)");

                    b.Property<int?>("ReplayFileId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ScoreHash")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64)")
                        .UseCollation("NOCASE");

                    b.Property<int>("SubmissionStatus")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalScore")
                        .HasColumnType("BIGINT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("WhenPlayed")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("score", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(2147483647)")
                        .UseCollation("NOCASE");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)")
                        .UseCollation("NOCASE");

                    b.Property<string>("Friends")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2147483647)")
                        .UseCollation("NOCASE");

                    b.Property<DateTime>("LastOnlineTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Passhash")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64)")
                        .UseCollation("NOCASE");

                    b.Property<int>("Privilege")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SilencedUntil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64)")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Users.UserFavouriteBeatmap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeatmapSetId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("user_favourite_beatmap", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Users.UserFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2147483647)")
                        .UseCollation("NOCASE");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("user_file", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Users.UserMedals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MedalId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UnlockedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("user_medals", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Users.UserStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Accuracy")
                        .HasColumnType("REAL");

                    b.Property<long?>("BestCountryRank")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("BestCountryRankDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("BestGlobalRank")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("BestGlobalRankDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxCombo")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PerformancePoints")
                        .HasColumnType("REAL");

                    b.Property<int>("PlayCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayTime")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RankedScore")
                        .HasColumnType("BIGINT");

                    b.Property<int>("TotalHits")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalScore")
                        .HasColumnType("BIGINT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("user_stats", (string)null);
                });

            modelBuilder.Entity("Sunrise.Shared.Database.Models.Users.UserStatsSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameMode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SnapshotsJson")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2147483647)")
                        .UseCollation("NOCASE");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("user_stats_snapshot", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
